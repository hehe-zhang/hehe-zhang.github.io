<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo-next主题优化]]></title>
    <url>%2F2019%2F09%2F19%2Fhexo-next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[摘要本文介绍Hexo博客环境搭建、安装Next主题及美化 1.环境准备1.1Node安装因为Hexo这个博客框架是基于NodeJs的，所以我们必须先安装NodeJS环境才能在后面使用我们的Hexo来搭建博客。 Windows环境，在node官网下载LTS版本的Node.js，选择偶数版本下载（偶数是长期稳定版本，有较好的兼容性），安装时选择Add to PATH选项，将node命令添加到系统环境变量。 Win + R , 输入cmd ，打开dos命令行，输入 node -v 查看NodeJS版本号，显示npm版本表示node安装成功 由于在使用npm安装时会用到国外的资源，访问会很慢，故添加淘宝 NPM 镜像 1npm install -g cnpm --registry=https://registry.npm.taobao.org 输入cnpm -v查看是否正常 1cnpm -v 1.2安装Hexo使用cnpm命令安装全局hexo 1cnpm install -g hexo 1.3Hexo项目初始化在合适位置创建blog文件夹，进入bash命令行，执行如下命令 1hexo init 执行完毕后就会在当前目录下生成一些文件夹，这便是我们博客需要的文件。 1234567├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 在blog目录下执行hexo s命令启动服务器，通过地址http://localhost:4000 访问 1234#缩写hexo s#完整命令 两种都可以hexo server 2Next主题Hexo博客支持很多主题风格，其中Next主题是Github上Star最多的主题，其一直在更新维护，支持非常多的外部插件和功能选项。下面介绍基于Next6主题的界面美化手法。 2.1Next主题的安装配置Next主题的安装方式很简单，只需要在blog根目录下执行： 1git clone https://github.com/theme-next/hexo-theme-next themes/next 然后设置根目录配置文件_config.yml： 1theme: next 即可将我们的Hexo博客主题替换为Next主题。 Next主题风格： Next提供了四中主题风格scheme，可以在主题配置文件blog/themes/next/_config.yml文件中进行选择，分别是Muse、Mist、Pisces、Gemini，本文选择的是Gemini主题 Next主题一般配置：在主题配置文件blog/themes/next/_config.yml文件中配置 1234567891011121314151617181920override：false #表示是否将主题置为默认样式cache: enable:true #表示添加缓存功能，这样浏览器后续打开我们的博客网站会更快menu: #设置博客各个页面的相对路径，默认根路径是blog/source home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #日历 #sitemap: /sitemap.xml || sitemap #站点地图，供搜索引擎爬取 #commonweal: /404/ || heartbeat # 腾讯公益404# Enable/Disable menu icons / item badges.menu_settings: icons: true # 是否显示各个页面的图标 badges: true # 是否显示分类/标签/归档页的内容量# Schemesscheme: Gemini 以上是Next最常规的配置，而相应的根目录配置blog/_config.yml文件的基本配置为： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081title: 班卡の博客subtitle: description: keywords:author: language: zh-CN # 主题语言timezone: Asia/Shanghai #中国的时区，不要乱改城市# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://huangpiao.tech #绑定域名root: / #默认根路径，指向实际的sourcepermalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render: README.md # 部署的时候不包含的文件# Writingnew_post_name: :title.md # 默认的新博文名称default_layout: post # 默认布局titlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0 #把博客名称改成小写/大写（1,2）render_drafts: false # 是否显示草稿post_asset_folder: false #是否启用资源文件夹（用来存放相对路径图片或文件）relative_link: false # 把链接改为与根目录的相对位址future: truehighlight: enable: true #是否开启代码高亮 line_number: true #是否增加代码行号 auto_detect: true #自动判断代码语言 tab_replace: # Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: #首页博客分布 path: '' #博客的默认路径 per_page: 10 #每页博客数量上限 order_by: -date #博客排序# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DD #博客日期格式time_format: HH:mm:ss #博客时间格式# Pagination## Set per_page to 0 to disable paginationper_page: 10 #同上#归档页的分页设置archive_generator: #归档页的配置 per_page: 30 #归档页每页博客数 yearly: true #按年归档 monthly: true #按月归档#标签页的分页设置tag_generator: per_page: 20 #标签页每页博客数 theme: next6 #选择博客主题，名字为themes中选择的主题文件夹名称# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: #博客部署 type: git repo: github: https://github.com/nightmaredimple/nightmaredimple.github.io.git coding: https://git.coding.net/nightmaredimple/nightmaredimple.git branch: master 2.2添加分类及标签选项根据blog/themes/next/_config.yml文件中菜单的选择，需要创建对应的目录，否则访问目录时会出现404错误，归档archives不需要创建文件，next默认创建好的 2.2.1创建分类选项打开命令行，进入/blog文件夹，执行命令 12hexo new page categories#成功后会提示：INFO Created: ~/blog/source/categories/index.md 然后打开新增的categories文件夹下的index.md文件/categories/index.md，修改内容为： 12345---title: 文章分类date: 2019-09-19 13:47:40type: "categories"--- 在根路径/blog下使用如下命令创建文章，创建后会在~/source/_posts路径下找到 1hexo new "文章名" 通过给文章添加categories，对应的categories页面中会出现文章对应属性，文章内容如下： 123456---title: jQuery对表单的操作及更多应用date: 2019-09-19 13:47:40categories: - web前端--- 2.2.2创建标签选项与生成分类选项类似，执行如下命令 1hexo new page categories 修改新增的index.md文件如下： 12345---title: 文章分类date: 2019-09-19 13:47:40type: "tags"--- 文章中添加tags标签，文章内容如下 12345678910---title: jQuery对表单的操作及更多应用date: 2019-09-19 13:47:40categories: - web前端tags:- jQuery- 表格- 表单验证--- 2.3文章结束标志在路径 \themes\next\layout\_macro 中新建 passage-end-tag.swig 文件,并添加以下内容： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 接着打开\themes\next\layout\_macro\post.swig文件，在post-body 之后(END POST BODY)， post-footer 之前添加如代码： 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 然后打开主题配置文件（_config.yml),在末尾添加： 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 2.4侧边栏设置设置主题配置文件，其中social表示社交信息，我们可以填入我们相关的链接，格式为链接名:链接地址 || 链接图标，其中链接图标必须是FontAwesome网站中存在的图标名。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394# Posts / Categories / Tags in sidebar.site_state: true # 是否在侧边栏加入日志、分类、标签等跳转链接# Social Links# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: GitHub: https://github.com/nightmaredimple || github # CSDN: https://blog.csdn.net/nightmare_dimple || crosshairs #E-Mail: mailto:yourname@gmail.com || envelope #Weibo: https://weibo.com/yourname || weibo #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true #是否显示社交图标 icons_only: false #是否仅显示社交图标 transition: true # Follow me on GitHub banner in right-top corner.# Usage: `permalink || title`# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the title and aria-label name.github_banner: https://github.com/nightmaredimple || Follow me on GitHub #添加右上角github绑带# Blog rollslinks_icon: linklinks_title: Linkslinks_layout: block#links_layout: inline#links: #Title: http://example.com# Sidebar Avataravatar: #头像设置 # in theme directory(source/images): /images/avatar.gif # in site directory(source/uploads): /uploads/avatar.gif # You can also use other linking images. url: /images/author.jpg # If true, the avatar would be dispalyed in circle. rounded: true # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar. opacity: 1 # If true, the avatar would be rotated with the cursor. rotated: true# Table Of Contents in the Sidebartoc: enable: true #是否自动生成目录 # Automatically add list number to toc. number: false #目录是否自动产生编号 # If true, all words will placed on next lines if header width longer then sidebar width. wrap: false #标题过长是否换行 # Maximum heading depth of generated toc. You can set it in one post through `toc_max_depth` var. max_depth: 6 #最大标题深度sidebar: # Sidebar Position, available values: left | right (only for Pisces | Gemini). position: left #侧边栏位置 #position: right # Manual define the sidebar width. # If commented, will be default for: # Muse | Mist: 320 # Pisces | Gemini: 240 #width: 300 # Sidebar Display, available values (only for Muse | Mist): # - post expand on posts automatically. Default. # - always expand for all pages automatically # - hide expand only when click on the sidebar toggle icon. # - remove Totally remove sidebar including sidebar toggle. display: post #display: always #display: hide #display: remove # Sidebar offset from top menubar in pixels (only for Pisces | Gemini). offset: 12 #侧边栏相对主菜单像素距离 # Back to top in sidebar. b2t: true #是否提供一键置顶 # Scroll percent label in b2t button. scrollpercent: true #是否显示当前阅读进度 # Enable sidebar on narrow view (only for Muse | Mist). onmobile: false #手机上是否显示侧边栏 2.5添加文章版权信息要想开启博客的版权功能，需要设置主题配置文件： 12345creative_commons: license: by-nc-sa sidebar: true post: true 2.6添加页面宠物首先在博客目录下执行： 12cnpm install -save hexo-helper-live2d 然后在根目录配置文件中加入： 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false model: use: live2d-widget-model-wanko #选择哪种模型 display: #放置位置和大小 position: right width: 150 height: 300 mobile: show: false #是否在手机端显示 上面模型的选择可在lived2d中选择，并下载相应的模型： 1cnpm install live2d-widget-model-wanko 2.7设置博客摘要显示对于摘要显示，需要开启摘要功能，修改主题配置文件： 12345678910111213141516171819# Automatically scroll page to section which is under &lt;!-- more --&gt; mark.scroll_to_more: true #选取博客正文&lt;!--more--&gt;前的内容# Automatically saving scroll position on each post/page in cookies.save_scroll: false# Automatically excerpt description in homepage as preamble text.excerpt_description: true #自动截取摘要# Automatically Excerpt. Not recommend.# Use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: false #自动截取一定程度的摘要 length: 150# Read more button# If true, the read more button would be displayed in excerpt section.read_more_btn: true #显示阅读全文按钮 2.8修改文章链接样式修改文件 themes\next\source\css\_common\components\post\post.styl，在末尾添加如下css样式，： 12345678910// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125; 2.9修改标签样式博客底部的标签样式默认为#tag，我们可以将其改成： 只需要修改模板/themes/next/layout/_macro/post.swig中 1&lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; 改为如下即可 1&lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; 2.10增加阅读次数/时长和访客数修改主题配置文件/themes/next/_config.yml 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859footer: # Specify the date when the site was setup. # If not defined, current year will be used. since: 2019 #建站时间 # Icon between year and copyright info. icon: # Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons/ # `heart` is recommended with animation in red (#ff0000). name: heart #作者图标（默认是author人像) # If you want to animate the icon, set it to true. animated: true #图标是否闪动 # Change the color of icon, using Hex Code. color: "#808080" #图标颜色 # If not defined, `author` from Hexo main config will be used. copyright: 黄飘 #别填bool型，最后显示的东西是copyright || author，即左边没有设置的话就显示作者 # ------------------------------------------------------------- powered: # Hexo link (Powered by Hexo). enable: false #是否显示 Powered by hexo # Version info of Hexo after Hexo link (vX.X.X). version: false #是否显示Hexo版本 theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false #是否显示主题信息 # Version info of NexT after scheme info (vX.X.X). version: false #是否显示主题版本 # ------------------------------------------------------------- # Beian icp information for Chinese users. In China, every legal website should have a beian icp in website footer. # http://www.miitbeian.gov.cn beian: enable: false #是否显示网站备案信息 icp: # ------------------------------------------------------------- # Any custom text can be defined here. #custom_text: Hosted by &lt;a href="https://pages.coding.me" class="theme-link" rel="noopener" target="_blank"&gt;Coding Pages&lt;/a&gt; # Post wordcount display settings# Dependencies: https://github.com/theme-next/hexo-symbols-count-timesymbols_count_time: separated_meta: true #分隔符| item_text_post: true #是否统计站点总字数 item_text_total: true #是否同级文章总字数 awl: 2 #平均每个字符的长度 wpm: 300 #words per minute busuanzi_count: enable: true #是否开启不蒜子统计功能 total_visitors: true #是否统计总访客数 total_visitors_icon: user #访客数图标为人像 total_views: true #是否同级总访问数 total_views_icon: eye #访问数图标为眼睛 post_views: true #是否统计文章访问数 post_views_icon: eye #访问数图标为眼睛 其中前者还需在根目录/blog/_config.yml配置文件中加入： 12345symbols_count_time:symbols: true #是否统计字数time: false #是否统计阅读时长total_symbols: true #是否统计总字数total_time: false #是否统计总阅读时长 相关依赖如下： 1npm install hexo-symbols-count-time --save symbols-count-time的数字经常不显示，因为busuanzi自带了这些功能（除了阅读时长，不过这个意义不大），只需要修改next/layout/_partials/footer.swig文件如下： 12345678910111213&lt;script async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt; &#123;% if config.symbols_count_time.total_symbols %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt; &lt;span class="post-meta-item-icon"&gt; &lt;i class="fa fa-area-chart"&gt;&lt;/i&gt; &lt;/span&gt; &#123;% if theme.symbols_count_time.item_text_total %&#125; &lt;span class="post-meta-item-text"&gt;&#123;&#123; __('symbols_count_time.count_total') + __('symbol.colon') &#125;&#125;&lt;/span&gt; &#123;% endif %&#125; &lt;span title="&#123;&#123; __('post.totalcount') &#125;&#125;"&gt; &#123;&#123; totalcount(site, '0,0.0a') &#125;&#125;字 &lt;/span&gt; &lt;!--&lt;span title="&#123;&#123; __('symbols_count_time.count_total') &#125;&#125;"&gt;&#123;&#123;symbolsCountTotal(site)&#125;&#125;&lt;/span&gt;--&gt; &#123;% endif %&#125; 以及修改next/layout/_macro/post.swig文件中的symbol部分： 1234567891011121314151617181920 &#123;% if config.symbols_count_time.symbols or config.symbols_count_time.time %&#125; &lt;div class="post-symbolscount"&gt; &#123;% if not theme.symbols_count_time.separated_meta %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt; &#123;% endif %&#125; &#123;% if config.symbols_count_time.symbols %&#125; &lt;span class="post-meta-item-icon"&gt; &lt;i class="fa fa-file-word-o"&gt;&lt;/i&gt; &lt;/span&gt; &#123;% if theme.symbols_count_time.item_text_post %&#125; &lt;span class="post-meta-item-text"&gt;&#123;&#123; __('symbols_count_time.count') + __('symbol.colon') &#125;&#125;&lt;/span&gt; &#123;% endif %&#125; &lt;!-- &lt;span title="&#123;&#123; __('symbols_count_time.count') &#125;&#125;"&gt;&#123;# #&#125;&#123;&#123; symbolsCount(post.content) &#125;&#125;&#123;# #&#125;&lt;/span&gt; --&gt;&lt;span title="&#123;&#123; __('symbols_count_time.count') &#125;&#125;"&gt; &#123;&#123; wordcount(post.content) &#125;&#125;字 &lt;/span&gt; &#123;% endif %&#125; 2.11添加图片配置将blog/_config.yml中post_asset_folder属性值改为true 1post_asset_folder: true #是否启用资源文件夹（用来存放相对路径图片或文件） 根目录执行下面命令 1cnpm install https://github.com/CodeFalling/hexo-asset-image --save 在根目录使用如下命令创建博客时，会在_post目录下看到一个与博客同名的文件夹 3部署GitHub3.1申请git账号进入GitHub官网，注册账号（用户名比较重要，如我的用户名为hehe-zhang，则博客访问地址为https://hehe-zhang.github.io/ ），选择New repository 项目名为：用户名.github.io，必须使用这个格式 3.2Hexo配置git修改配置文件blog/_config.yml中deploy为git部署 1234deploy: type: git repo: 你的git目录（刚创建的） branch: master 3.3本地git环境搭建和Hexo项目部署进入git官网下载，下载后安装git，一路next即可，这里不多介绍。配置SSH key，因为提交代码要拥有github权限，但是直接使用用户名和密码太不安全，所以使用ssh key来解决本地和服务器的连接问题 1$ cd ~/. ssh #检查本机已存在的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git 1ssh-keygen -t rsa -C "邮件地址" 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 安装git插件 1cnpm install hexo-deployer-git --save 然后使用如下命令部署到git 1hexo d Hexo常用命令1234567891011121314hexo help #查看帮助hexo init #初始化一个目录hexo new "postName" #新建文章hexo new page "pageName" #新建页面hexo generate #生成网页，可以在 public 目录查看整个网站的文件hexo server #本地预览，'Ctrl+C'关闭hexo deploy #部署.deploy目录hexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**#简写hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 参考 https://huangpiao.tech/2019/01/24/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E4%B9%8BNext%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
